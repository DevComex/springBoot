<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN" "log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">
	<!-- appender(输出源)：日志要输出的地方 org.apache.log4j.ConsoleAppender（控制台） org.apache.log4j.FileAppender（文件） 
		org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件） org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件） 
		org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方） -->

	<!-- 控制台格式输出 -->
	<!-- ImmediateFlush=true：表示所有消息都会被立即输出，设为false则不输出，默认值是true。 -->
	<appender name="console" class="org.apache.log4j.ConsoleAppender">
		<!-- 指定日志信息的最低输出级别 -->
		<param name="Threshold" value="error" />
		<!-- 指定日志信息的等级 -->
		<param name="Target" value="System.err" />
		<!-- layout(布局)：日志以何种形式输出 org.apache.log4j.HTMLLayout（以HTML表格形式布局） org.apache.log4j.PatternLayout（自定义布局，可以灵活地指定布局模式） 
			org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串） org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等信息） -->
		<!-- 自定义布局 -->
		<layout class="org.apache.log4j.PatternLayout">
			<!-- ConversionPattern格式化符号说明 %p：输出日志信息的优先级，即DEBUG，INFO，WARN，ERROR，FATAL。 
				%d：输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式， 如：%d{yyyy/MM/dd HH:mm:ss,SSS}。 
				%r：输出自应用程序启动到输出该log信息耗费的毫秒数。 %t：输出产生该日志事件的线程名。 %l：输出日志事件的发生位置，相当于%c.%M(%F:%L)的组合，包括类全名、方法、文件名 
				以及在代码中的行数。例如：test.TestLog4j.main(TestLog4j.java:10)。 %c：输出日志信息所属的类目，通常就是所在类的全名。 
				%M：输出产生日志信息的方法名。 %F：输出日志消息产生时所在的文件名称。 %L:：输出代码中的行号。 %m:：输出代码中指定的具体日志信息。 %n：输出一个回车换行符，Windows平台为"rn"，Unix平台为"n"。 
				%x：输出和当前线程相关联的NDC(嵌套诊断环境)，尤其用到像java servlets这样的多客户 多线程的应用中。 %%：输出一个"%"字符。 -->
			<param name="ConversionPattern" value="Log4j : %-5p: %c - %m%n" />
		</layout>
	</appender>

	<!-- 日志文件 -->
	<!-- Threshold=WARN：指定日志信息的最低输出级别，默认为DEBUG。 ImmediateFlush=true：表示所有消息都会被立即输出，设为false则不输出，默认值是true。 
		Append=false：true表示消息增加到指定文件中，false则将消息覆盖指定的文件内容，默认值是true。 -->
	<appender name="file" class="org.apache.log4j.FileAppender">
		<!-- 指定消息输出到logging.log4j文件中 相对路径：../logs/file.log4j 绝对路径：${infoOutputPath}/logs/file.log4j -->
		<param name="File" value="${slf4j.output}" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="Log4j : %-5p: %c - %m%n" />
		</layout>
	</appender>

	<!-- 定期回滚文件 -->
	<!-- (3)、DailyRollingFileAppender选项： Threshold=WARN：指定日志信息的最低输出级别，默认为DEBUG。 
		ImmediateFlush=true：表示所有消息都会被立即输出，设为false则不输出，默认值是true。 Append=false：true表示消息增加到指定文件中，false则将消息覆盖指定的文件内容，默认值是true。 -->
	<appender name="dailyRollingFile" class="org.apache.log4j.DailyRollingFileAppender">
		<!-- 指定消息输出到logging.log4j文件中 -->
		<param name="File" value="${slf4j.dailyRollingOutput}" />
		<!-- DatePattern='.'yyyy-MM：每月滚动一次日志文件，即每月产生一个新的日志文件。当前月的日志文件名为logging.log4j，前一个月的日志文件名为logging.log4j.yyyy-MM。 
			另外，也可以指定按周、天、时、分等来滚动日志文件，对应的格式如下： 1)、'.'yyyy-MM：每月 2)、'.'yyyy-ww：每周 3)、'.'yyyy-MM-dd：每天 
			4)、'.'yyyy-MM-dd-a：每天两次 5)、'.'yyyy-MM-dd-HH：每小时 6)、'.'yyyy-MM-dd-HH-mm：每分钟 -->
		<param name="DatePattern" value="'.'yyyy-MM-dd HH:mm" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="Log4j : %-5p: %c - %m%n" />
		</layout>
	</appender>

	<!-- 回滚文件 -->
	<!-- (4)、RollingFileAppender选项： Threshold=WARN：指定日志信息的最低输出级别，默认为DEBUG。 ImmediateFlush=true：表示所有消息都会被立即输出，设为false则不输出，默认值是true。 
		Append=false：true表示消息增加到指定文件中，false则将消息覆盖指定的文件内容，默认值是true。 -->
	<appender name="rollingFileAppender" class="org.apache.log4j.RollingFileAppender">
		<!-- 指定消息输出到logging.log4j文件中 -->
		<param name="File" value="${slf4j.rollingOutput}" />
		<!-- MaxFileSize=100KB：后缀可以是KB, MB 或者GB。在日志文件到达该大小时，将会自动滚动，即将原来的内容移到logging.log4j.1文件中。 -->
		<param name="MaxFileSize" value="4KB" />
		<!-- MaxBackupIndex=2：指定可以产生的滚动文件的最大数，例如，设为2则可以产生logging.log4j.1，logging.log4j.2两个滚动文件和一个logging.log4j文件。 -->
		<param name="MaxBackupIndex" value="5" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="Log4j : %-5p: %c - %m%n" />
		</layout>
	</appender>

	<!-- 数据库 -->
	<appender name="database" class="org.apache.log4j.jdbc.JDBCAppender">
		<!-- URL:数据库链接路径 jdbc:mysql://localhost:3306/test -->
		<param name="URL" value="jdbc:mysql://localhost:3306/test" />
		<!-- driver:JDBC驱动 com.mysql.jdbc.Driver -->
		<param name="driver" value="com.mysql.jdbc.Driver" />
		<!-- user:用户名 root -->
		<param name="user" value="root" />
		<!-- password:密码 admin -->
		<param name="password" value="admin" />
		<!-- sql:插入语句 INSERT INTO LOG4J (Message) VALUES('Log4j : %-5p: %c - %m%n') -->
		<param name="sql"
			value="INSERT INTO LOG4J (Message) VALUES('Log4j : %-5p: %c - %m%n')" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="Log4j : %-5p: %c - %m%n" />
		</layout>
	</appender>

	<!-- 将不同级别的日志输出到不同的文件里
	<appender name="debug" class="cn.gyyx.core.deprecated.log4j.FileAppender">
		<param name="File" value="${infoOutputPath}/logs/debug.log4j" />
		<param name="Threshold" value="debug" />
		<param name="Append" value="true" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="Log4j : %-5p: %c - %m%n" />
		</layout>
	</appender>
	<appender name="info" class="cn.gyyx.core.deprecated.log4j.FileAppender">
		<param name="File" value="${infoOutputPath}/logs/info.log4j" />
		<param name="Threshold" value="info" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="Log4j : %-5p: %c - %m%n" />
		</layout>
	</appender>
	<appender name="warn" class="cn.gyyx.core.deprecated.log4j.FileAppender">
		<param name="File" value="${infoOutputPath}/logs/warn.log4j" />
		<param name="Threshold" value="warn" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="Log4j : %-5p: %c - %m%n" />
		</layout>
	</appender>
	<appender name="error" class="cn.gyyx.core.deprecated.log4j.FileAppender">
		<param name="File" value="${infoOutputPath}/logs/error.log4j" />
		<param name="Threshold" value="error" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="Log4j : %-5p: %c - %m%n" />
		</layout>
	</appender>
	<appender name="fatal" class="cn.gyyx.core.deprecated.log4j.FileAppender">
		<param name="File" value="${infoOutputPath}/logs/fatal.log4j" />
		<param name="Threshold" value="fatal" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="Log4j : %-5p: %c - %m%n" />
		</layout>
	</appender> -->

	<!-- 针对某些类和包输出日志 -->
	<logger name="slf4j">
		<level value="debug"></level>
		<appender-ref ref="console" />
	</logger>

	<!-- Root Logger -->
	<root>
		<!-- level ：设定日志记录的最低级别，可设的值有OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL或者自定义的级别， -->
		<level value="all" />
		<!--指定日志信息要输出到哪里。可以同时指定多个输出目的地 !-->
		<!-- <appender-ref ref="info" />
		<appender-ref ref="debug" />
		<appender-ref ref="warn" />
		<appender-ref ref="error" />
		<appender-ref ref="fatal" /> -->
		<appender-ref ref="console" />
		<appender-ref ref="file" />
		<appender-ref ref="dailyRollingFile" />
		<appender-ref ref="rollingFileAppender" />
	</root>
</log4j:configuration>
